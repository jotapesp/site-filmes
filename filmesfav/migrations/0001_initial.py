# Generated by Django 4.2.3 on 2023-07-13 14:25

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Ator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(help_text="Nome artistico", max_length=255)),
                (
                    "nascimento",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 7, 13, 14, 25, 24, 140181),
                        help_text="Data de nascimento",
                        verbose_name="Data de nascimento",
                    ),
                ),
                ("nacionalidade", models.CharField(max_length=255)),
            ],
            options={"ordering": ["nome", "nascimento"],},
        ),
        migrations.CreateModel(
            name="Diretor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(help_text="Nome", max_length=255)),
                (
                    "nascimento",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 7, 13, 14, 25, 24, 140054),
                        help_text="Data de nascimento",
                        verbose_name="Data de nascimento",
                    ),
                ),
                ("nacionalidade", models.CharField(max_length=255)),
            ],
            options={"ordering": ["nome", "nascimento"],},
        ),
        migrations.CreateModel(
            name="Genero",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "titulo",
                    models.CharField(
                        help_text="Nome do genero",
                        max_length=255,
                        verbose_name="Genero",
                    ),
                ),
            ],
            options={"ordering": ["titulo"],},
        ),
        migrations.CreateModel(
            name="Filmes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "titulo",
                    models.CharField(help_text="TÃ­tulo do filme", max_length=280),
                ),
                ("sinopse", models.TextField(help_text="Sinopse")),
                (
                    "data",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 7, 13, 14, 25, 24, 139487),
                        help_text="Data de estreia",
                    ),
                ),
                (
                    "diretor",
                    models.ForeignKey(
                        help_text="Diretor",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="filmesfav.diretor",
                    ),
                ),
                (
                    "elenco",
                    models.ManyToManyField(
                        help_text="Ator no elenco", to="filmesfav.ator"
                    ),
                ),
                (
                    "genero",
                    models.ManyToManyField(
                        help_text="Generos do filme", to="filmesfav.genero"
                    ),
                ),
            ],
            options={"ordering": ["titulo", "data"],},
        ),
    ]
